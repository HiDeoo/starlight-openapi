---
interface Props {
  additional?: boolean
  deprecated?: boolean
  name: string
  required?: boolean | undefined
}

const { additional, deprecated, name, required } = Astro.props
---

<div class="key not-content">
  <div class="name">
    <strong>{additional ? <em>{name}</em> : deprecated ? <s>{name}</s> : name}</strong>
    {required && <div class="required">required</div>}
    {deprecated && <div class="deprecated">deprecated</div>}
    {additional && <div class="additional">additional properties</div>}
  </div>
  <div class="description">
    <slot />
  </div>
</div>

<style>
  .key {
    display: flex;
    gap: 1rem;
  }

  .name {
    max-width: 50%;
    min-width: 25%;
  }

  .required {
    color: var(--sl-color-red);
    font-size: var(--sl-text-sm);
  }

  .deprecated {
    --sl-openapi-deprecated-color: hsl(var(--sl-openapi-deprecated-hue), 82%, 63%);

    color: var(--sl-openapi-deprecated-color);
    font-size: var(--sl-text-sm);
  }

  :global(:root[data-theme='light']) .deprecated {
    --sl-openapi-deprecated-color: hsl(var(--sl-openapi-deprecated-hue), 90%, 25%);
  }

  .additional {
    color: var(--sl-color-gray-3);
    font-size: var(--sl-text-sm);
  }

  .description {
    flex: 1;
  }
</style>
