---
import type { Properties, SchemaObject } from '../../libs/schemaObject'
import Key from '../Key.astro'
import Tag from '../Tag.astro'

import Schema from './SchemaObject.astro'

interface Props {
  parents: SchemaObject[]
  properties: Properties
  required: string[] | undefined
}

const { parents, properties, required } = Astro.props
---

{
  Object.entries(properties).map(([name, schema]) => (
    <Key name={name} required={required?.includes(name)}>
      {parents?.indexOf(schema) >= 0 ? (
        <div>
          <span class="type">object</span>
          <Tag>recursive</Tag>
        </div>
      ) : (
        <Schema {parents} nested schemaObject={schema} />
      )}
    </Key>
  ))
}

<style>
  .type {
    color: var(--sl-color-text-accent);
    font-weight: 600;
    margin-inline-end: 0.3rem;
  }
</style>
